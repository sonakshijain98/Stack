#include <iostream>
#include <climits>

using namespace std;
struct Stack{
    int top;
    int max;
    int* a;
    Stack(int cap){
        top=-1;
        max=cap;
        a=new int[max];
    }
    void push(int x){
        if(isFull()){cout<<"Stack is FULL"<<endl; return;}
        cout<<"Elemt is pushed: "<<x<<endl;
        a[++top]=x;
    }
    int pop(){
        if(isEmpty()){cout<<"Stack is Empty"<<endl; return INT_MIN;}
        cout<<"Elemt is popped: "<<a[top]<<endl;
        return a[top--];
    }
    int peek(){
        if(isEmpty()){cout<<"Stack is Empty"<<endl; return INT_MIN;}
         cout<<"Elemt at top: "<<a[top]<<endl;
        return a[top];
    }
    bool isEmpty(){
        return top==-1;
    }
    bool isFull(){
        return top==max-1;
    }
    void display(){
        if(isEmpty()){cout<<"Empty"<<endl; return;}
        for(int i=top;i>=0;i--){
            cout<<a[i]<<" ";
        }
        cout<<endl;
    }
    int stackSize(){
        cout<<"Size: "<<endl;
        return top+1;
    }
};
int main()
{
    Stack s(5);
    s.push(5);
    s.push(7);
    s.push(6);
    s.push(7);
    s.push(6);
    s.push(6);
    s.display();
    cout<<s.peek()<<endl;
    s.pop();
    cout<<s.peek()<<endl;
    cout<<s.stackSize()<<endl;
     s.display();
    return 0;
}
