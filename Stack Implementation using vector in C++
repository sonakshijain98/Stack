
#include <iostream>
#include <vector>
#include <climits>
using namespace std;
struct Stack{
    vector<int> vec;
    int Size(){
        if(isEmpty()){
            return 0;
        }
        return vec.size();
    }
    bool isEmpty(){
        return vec.empty();
    }
    int peek(){
        if(isEmpty()){return INT_MIN;}
        return vec.back();
    }
    int pop(){
        if(isEmpty()){return INT_MIN;}
        int temp=vec.back();
        vec.pop_back();
        return temp;
    }
    void push(int x){
        vec.push_back(x);
    }
    void display(){
        vector<int> :: iterator itr;
        for(itr=vec.end()-1;itr>=vec.begin();itr--){
            cout<<*itr<<" ";
        }
        cout<<endl;
    }
};
int main()
{
    Stack s;
    s.push(5);
    s.push(7);
    s.push(9);
    s.display();
    cout<<s.pop()<<endl;
    s.display();
    cout<<s.Size()<<endl;
    cout<<s.peek()<<endl;
    return 0;
}
